<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_stand</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize variables

grav = 0.5;
spd = 3.5;
jspd = 8;
hspd = 0;
vspd = 0;
can_fire = true;

///////
bodycapacity = 0
helmet = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Time between shots
can_fire = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move

var rkey = keyboard_check(vk_right);
var lkey = keyboard_check(vk_left);
var jkey = keyboard_check(vk_up);

// Check for ground

if place_meeting(x, y+1, obj_solid) {
    vspd = 0;
    //Jumping code
    if jkey { vspd = -jspd;
    }
} else {
    /// Gravity
    if (vspd &lt; 10) {
        vspd += grav;
        }
}

// Moving right
if (rkey) {
    hspd = spd;
}

// Moving left
if (lkey) {
    hspd = -spd;
}

// Check for not moving
if (!rkey &amp;&amp; !lkey) || (rkey &amp;&amp; lkey)
{
    hspd = 0;
};

// Horizontal collisions
if (place_meeting(x+hspd, y, obj_solid)) {
    while (!place_meeting(x+sign(hspd), y, obj_solid)) {
    x+= sign(hspd);
    }
hspd = 0;
}

// Move horizontally
x+= hspd;

// Vertical collisions
if (place_meeting(x, y+vspd, obj_solid)) {
    while (!place_meeting(x, y+sign(vspd), obj_solid)) {
    y+= sign(vspd);
    }
vspd = 0;
}

// Move vertically
y+= vspd;

// Control Sprites
if (yprevious != y) {
    sprite_index = spr_player_jump;
    image_speed = 0;
    image_index = y&gt;yprevious;
} else {
    if (xprevious != x) {
        sprite_index = spr_player_walk;
        //image_speed = .3;
    } else {
        sprite_index = spr_player_stand;
        }
}

// Control player's facing direction
if (xprevious &lt; x) {
    image_xscale = 1;
} else if (xprevious &gt; x) {
    image_xscale = -1;
}
    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///States

//Wear helmet by pressing G.
if helmet = 0
{
    if (keyboard_check_pressed(ord('G')))
    {
        helmet = 1;
    };
};
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_escapevan">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check_pressed(ord('Q'))
{
    if global.heistloot &gt; 0
    {
        global.getawayvehicleloot += global.heistloot
        global.heistloot = 0
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if can_fire = true {
    var pistolbullet
    if (image_xscale = 1) {
        pistolbullet = instance_create(x+1, y, obj_pistolbullet)
        pistolbullet.speed = 10
        pistolbullet.direction = 0
        can_fire = false
        alarm[0] = 10
        } else if (image_xscale = -1) {
        pistolbullet = instance_create(x-1, y, obj_pistolbullet)
        pistolbullet.speed = 10
        pistolbullet.direction = 180
        can_fire = false
        alarm[0] = 10
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
