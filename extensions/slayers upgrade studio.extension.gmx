<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<extension>
  <name>slayers upgrade studio</name>
  <version>1.3</version>
  <packageID></packageID>
  <ProductID></ProductID>
  <date>5/18/2014</date>
  <license>please give credit</license>
  <description>3d games made easier</description>
  <helpfile>C:\Users\Leo\AppData\Local\GameMaker-Studio\extensions\slayers upgrade studio.html</helpfile>
  <androidProps>0</androidProps>
  <iosProps>0</iosProps>
  <installdir></installdir>
  <classname></classname>
  <androidclassname></androidclassname>
  <sourcedir></sourcedir>
  <androidsourcedir></androidsourcedir>
  <macsourcedir></macsourcedir>
  <maclinkerflags></maclinkerflags>
  <androidinject></androidinject>
  <iosSystemFrameworks/>
  <iosThirdPartyFrameworks/>
  <androidPermissions/>
  <IncludedResources/>
  <files>
    <file>
      <filename>everything.gml</filename>
      <origname>C:\Users\Computer\Dropbox\Game maker\Extensions\slayersUpgrade\all scripts\a everything.gml</origname>
      <init></init>
      <final></final>
      <kind>2</kind>
      <ConfigOptions>
        <Config name="Default">
          <CopyToMask>9223372036854775807</CopyToMask>
        </Config>
      </ConfigOptions>
      <functions>
        <function>
          <name>slayersUpgradeInit</name>
          <externalName>slayersUpgradeInit</externalName>
          <kind>2</kind>
          <help>slayersUpgradeInit(object_index)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>slayersUpgradeDone</name>
          <externalName>slayersUpgradeDone</externalName>
          <kind>2</kind>
          <help>slayersUpgradeDone()</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>vecInit</name>
          <externalName>vecInit</externalName>
          <kind>2</kind>
          <help>vecInit()</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>vecCreate</name>
          <externalName>vecCreate</externalName>
          <kind>2</kind>
          <help>vecCreate(x,y,z)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecCreateCopy</name>
          <externalName>vecCreateCopy</externalName>
          <kind>2</kind>
          <help>vecCreateCopy(copyVector)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecDestroy</name>
          <externalName>vecDestroy</externalName>
          <kind>2</kind>
          <help>vecDestroy(vector)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecCopy</name>
          <externalName>vecCopy</externalName>
          <kind>2</kind>
          <help>vecCopy(target,source)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecx</name>
          <externalName>vecx</externalName>
          <kind>2</kind>
          <help>vecx(vector)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecy</name>
          <externalName>vecy</externalName>
          <kind>2</kind>
          <help>vecy(vector)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecz</name>
          <externalName>vecz</externalName>
          <kind>2</kind>
          <help>vecz(vector)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecAdd</name>
          <externalName>vecAdd</externalName>
          <kind>2</kind>
          <help>vecAdd(result,vector,add)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecAddScale</name>
          <externalName>vecAddScale</externalName>
          <kind>2</kind>
          <help>vecAddScale(vResult,vPosition,vDirection,scaler)</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecSubtract</name>
          <externalName>vecSubtract</externalName>
          <kind>2</kind>
          <help>vecSubtract(result,vector,sub)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecCross</name>
          <externalName>vecCross</externalName>
          <kind>2</kind>
          <help>vecCross(result,vectora,vectorb)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecCrossNormalize</name>
          <externalName>vecCrossNormalize</externalName>
          <kind>2</kind>
          <help>vecCrossNormalize(result,vectora,vectorb)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecLength</name>
          <externalName>vecLength</externalName>
          <kind>2</kind>
          <help>vecLength(vector)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecNormalize</name>
          <externalName>vecNormalize</externalName>
          <kind>2</kind>
          <help>vecNormalize(vector)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecScale</name>
          <externalName>vecScale</externalName>
          <kind>2</kind>
          <help>vecScale(vResult,vector,scaler)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecMultiply</name>
          <externalName>vecMultiply</externalName>
          <kind>11</kind>
          <help>vecMultiply(result,vector,vectorMultiply)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecAddxyz</name>
          <externalName>vecAddxyz</externalName>
          <kind>2</kind>
          <help>vecAddxyz(vector,x,y,z)</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecSetxyz</name>
          <externalName>vecSetxyz</externalName>
          <kind>2</kind>
          <help>vecSetxyz(vector,x,y,z)</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecSetPitchYaw</name>
          <externalName>vecSetPitchYaw</externalName>
          <kind>2</kind>
          <help>vecSetPitchYaw(vector,pitch,yaw)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecFromTo</name>
          <externalName>vecFromTo</externalName>
          <kind>2</kind>
          <help>vecFromTo(result,fromThisPosition,toThisOne)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecFromToNormalize</name>
          <externalName>vecFromToNormalize</externalName>
          <kind>2</kind>
          <help>vecFromToNormalize(result,fromThisPosition,toThisOne)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecDot</name>
          <externalName>vecDot</externalName>
          <kind>2</kind>
          <help>vecDot(vectora,vectorb)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecOrtho</name>
          <externalName>vecOrtho</externalName>
          <kind>2</kind>
          <help>vecOrtho(vResult,vOrtho,vector)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecAngle</name>
          <externalName>vecAngle</externalName>
          <kind>2</kind>
          <help>vecAngle(vectora,vectorb)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecDistance</name>
          <externalName>vecDistance</externalName>
          <kind>2</kind>
          <help>vecDistance(positiona,positionb)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecGetPitch</name>
          <externalName>vecGetPitch</externalName>
          <kind>2</kind>
          <help>vecGetPitch(vector)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecGetYaw</name>
          <externalName>vecGetYaw</externalName>
          <kind>2</kind>
          <help>vecGetYaw(vector)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecRotatex</name>
          <externalName>vecRotatex</externalName>
          <kind>2</kind>
          <help>vecRotatex(vector,x,y)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecRotatey</name>
          <externalName>vecRotatey</externalName>
          <kind>2</kind>
          <help>vecRotatey(vector,x,y)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecRotatez</name>
          <externalName>vecRotatez</externalName>
          <kind>2</kind>
          <help>vecRotatez(vector,x,y)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecFloor</name>
          <externalName>vecFloor</externalName>
          <kind>11</kind>
          <help>vecFloor(vResult,vector,vSize)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecCeil</name>
          <externalName>vecCeil</externalName>
          <kind>2</kind>
          <help>vecCeil(vResult,vector,vSize)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecRound</name>
          <externalName>vecRound</externalName>
          <kind>2</kind>
          <help>vecRound(vResult,vector,vSize)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecRoundoff</name>
          <externalName>vecRoundoff</externalName>
          <kind>2</kind>
          <help>vecRoundoff(vResult,vector,vSize)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecRoundDown</name>
          <externalName>vecRoundDown</externalName>
          <kind>2</kind>
          <help>vecRoundDown(vResult,vector,vSize)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecRoundUp</name>
          <externalName>vecRoundUp</externalName>
          <kind>2</kind>
          <help>vecRoundUp(vResult,vector,vSize)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecMinMax</name>
          <externalName>vecMinMax</externalName>
          <kind>2</kind>
          <help>vecMinMax(vResultMin,vResultMax,vectora,vectorb)</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecMedian</name>
          <externalName>vecMedian</externalName>
          <kind>2</kind>
          <help>vecMedian(vResult,vector,vMin,vMax)</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecGetSide</name>
          <externalName>vecGetSide</externalName>
          <kind>2</kind>
          <help>vecGetSide(vNormal)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>vecGetNormal</name>
          <externalName>vecGetNormal</externalName>
          <kind>2</kind>
          <help>vecGetNormal(vResult,side)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>quatInit</name>
          <externalName>quatInit</externalName>
          <kind>2</kind>
          <help>quatInit()</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>quatCreate</name>
          <externalName>quatCreate</externalName>
          <kind>2</kind>
          <help>quatCreate()</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>quatDestroy</name>
          <externalName>quatDestroy</externalName>
          <kind>2</kind>
          <help>quatDestroy(quat)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>quatCopy</name>
          <externalName>quatCopy</externalName>
          <kind>2</kind>
          <help>quatCopy(target,source)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>quatGetVectors</name>
          <externalName>quatGetVectors</externalName>
          <kind>2</kind>
          <help>quatGetVectors(quaternion,vForward,vSide,vUp)</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>quatGetVecx</name>
          <externalName>quatGetVecx</externalName>
          <kind>2</kind>
          <help>quatGetVecx(quat,vResult)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>quatGetVecy</name>
          <externalName>quatGetVecy</externalName>
          <kind>2</kind>
          <help>quatGetVecy(quat,vResult)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>quatGetVecz</name>
          <externalName>quatGetVecz</externalName>
          <kind>2</kind>
          <help>quatGetVecz(quat,vResult)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>quatGetEuler</name>
          <externalName>quatGetEuler</externalName>
          <kind>2</kind>
          <help>quatGetEuler(quat,vResult)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>quatMultiply</name>
          <externalName>quatMultiply</externalName>
          <kind>11</kind>
          <help>quatMultiply(qResult,quaterniona,quaternionb)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>quatAutoRotate</name>
          <externalName>quatAutoRotate</externalName>
          <kind>2</kind>
          <help>quatAutoRotate(quaternion,vStart,vGoal,degrees)</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>quatSetAxisAngle</name>
          <externalName>quatSetAxisAngle</externalName>
          <kind>2</kind>
          <help>quatSetAxisAngle(quat,vector,degrees)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>quatSetEuler</name>
          <externalName>quatSetEuler</externalName>
          <kind>2</kind>
          <help>quatSetEuler(quat,roll,pitch,yaw)</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>quatClear</name>
          <externalName>quatClear</externalName>
          <kind>2</kind>
          <help>quatClear(quat)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>quatNormalize</name>
          <externalName>quatNormalize</externalName>
          <kind>2</kind>
          <help>quatNormalize(quaternion)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>quatInterpolate</name>
          <externalName>quatInterpolate</externalName>
          <kind>2</kind>
          <help>quatInterpolate(qResult,qZero,qOne,range)</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spacesInit</name>
          <externalName>spacesInit</externalName>
          <kind>2</kind>
          <help>spacesInit()</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>spaceCreate</name>
          <externalName>spaceCreate</externalName>
          <kind>2</kind>
          <help>spaceCreate(vPosition)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spaceDestroy</name>
          <externalName>spaceDestroy</externalName>
          <kind>2</kind>
          <help>spaceDestroy(space)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spaceCopy</name>
          <externalName>spaceCopy</externalName>
          <kind>2</kind>
          <help>spaceCopy(target,source)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spacePrepNone</name>
          <externalName>spacePrepNone</externalName>
          <kind>2</kind>
          <help>spacePrepNone(space)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spacePrepQuat</name>
          <externalName>spacePrepQuat</externalName>
          <kind>2</kind>
          <help>spacePrepQuat(space,quat)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spacePrepVectors</name>
          <externalName>spacePrepVectors</externalName>
          <kind>2</kind>
          <help>spacePrepVectors(space,vForward,vSide,vUp)</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spaceConvertIn</name>
          <externalName>spaceConvertIn</externalName>
          <kind>2</kind>
          <help>spaceConvertIn(space,vResult,vector)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spaceConvertOut</name>
          <externalName>spaceConvertOut</externalName>
          <kind>2</kind>
          <help>spaceConvertOut(space,vResult,vector)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spaceConvertPosIn</name>
          <externalName>spaceConvertPosIn</externalName>
          <kind>2</kind>
          <help>spaceConvertPosIn(space,vResult,vPosition)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spaceConvertPosOut</name>
          <externalName>spaceConvertPosOut</externalName>
          <kind>2</kind>
          <help>spaceConvertPosOut(space,vResult,vPosition)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>rayTracePlane</name>
          <externalName>rayTracePlane</externalName>
          <kind>2</kind>
          <help>rayTracePlane(vPointOnPlane,vPlaneNormal,vRayPosition,vRayDirection,vNormalResult)</help>
          <returnType>2</returnType>
          <argCount>5</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>rayTraceTriangle</name>
          <externalName>rayTraceTriangle</externalName>
          <kind>2</kind>
          <help>rayTraceTriangle(vPointa,vPointb,vPointc,vNormal,vRayPosition,vRayDirection,vNormalResult)</help>
          <returnType>2</returnType>
          <argCount>7</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>rayTraceBlock</name>
          <externalName>rayTraceBlock</externalName>
          <kind>2</kind>
          <help>rayTraceBlock(vBoxPosition,vBoxSize,vRayPosition,vRayDirection,vNormalResult)</help>
          <returnType>2</returnType>
          <argCount>5</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>rayTraceBlockInside</name>
          <externalName>rayTraceBlockInside</externalName>
          <kind>2</kind>
          <help>rayTraceBlockInside(vBoxPosition,vBoxSize,vRayPosition,vRayDirection,vNormalResult)</help>
          <returnType>2</returnType>
          <argCount>5</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>rayTraceSphere</name>
          <externalName>rayTraceSphere</externalName>
          <kind>2</kind>
          <help>rayTraceSphere(spherePosition,radius,rayPosition,rayDirection,vNormalResult)</help>
          <returnType>2</returnType>
          <argCount>5</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>rayTraceCylinder</name>
          <externalName>rayTraceCylinder</externalName>
          <kind>2</kind>
          <help>rayTraceCylinder(vPosition,height,radius,vRayPosition,vRayDirection,vNormalResult)</help>
          <returnType>2</returnType>
          <argCount>6</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>rayTraceCylinderInside</name>
          <externalName>rayTraceCylinderInside</externalName>
          <kind>2</kind>
          <help>rayTraceCylinderInside(vPosition,height,radius,vRayPosition,vRayDirection,vNormalResult)</help>
          <returnType>2</returnType>
          <argCount>6</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>rayTraceCone</name>
          <externalName>rayTraceCone</externalName>
          <kind>2</kind>
          <help>rayTraceCone(vConePosition,height,radius,vRayPosition,vRayDirection,vNormalResult)</help>
          <returnType>2</returnType>
          <argCount>6</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>rayTraceBlockSystem</name>
          <externalName>rayTraceBlockSystem</externalName>
          <kind>2</kind>
          <help>rayTraceBlockSystem(blockSystem,vPosition,vRayPosition,vRayDirection,vNormalResult)</help>
          <returnType>2</returnType>
          <argCount>5</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>extraTracePlane</name>
          <externalName>extraTracePlane</externalName>
          <kind>2</kind>
          <help>extraTracePlane(vPointOnPlane,vPlaneNormal,vRayPosition,vRayDirection,extraDistace,vNormalResult)</help>
          <returnType>2</returnType>
          <argCount>6</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>extraTraceBlock</name>
          <externalName>extraTraceBlock</externalName>
          <kind>2</kind>
          <help>extraTraceBlock(vBoxPosition,vBoxSize,vRayPosition,vRayDirection,halfSize,vNormalResult)</help>
          <returnType>2</returnType>
          <argCount>6</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>extraTraceBlockInside</name>
          <externalName>extraTraceBlockInside</externalName>
          <kind>2</kind>
          <help>extraTraceBlockInside(vBoxPosition,vBoxSize,vRayPosition,vRayDirection,halfSize,vNormalResult)</help>
          <returnType>2</returnType>
          <argCount>6</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>extraTraceCylinder</name>
          <externalName>extraTraceCylinder</externalName>
          <kind>2</kind>
          <help>extraTraceCylinder(vCylinderPosition,cylinderHeight,cylinderRadius,vRayPosition,vRayDirection,extraDistance,vNormalResult)</help>
          <returnType>2</returnType>
          <argCount>7</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>extraTraceSphere</name>
          <externalName>extraTraceSphere</externalName>
          <kind>2</kind>
          <help>extraTraceSphere(vSpherePosition,radius,vRayPosition,vRayDirection,extraTrace,vNormalResult)</help>
          <returnType>2</returnType>
          <argCount>6</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>extraTraceCone</name>
          <externalName>extraTraceCone</externalName>
          <kind>2</kind>
          <help>extraTraceCone(vConePosition,coneHeight,coneRadius,vRayPosition,vRayDirection,extraDistance,vNormalResult)</help>
          <returnType>2</returnType>
          <argCount>7</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>extraTraceBlockSystem</name>
          <externalName>extraTraceBlockSystem</externalName>
          <kind>2</kind>
          <help>extraTraceBlockSystem(blockSystem,vPosition,vRayPosition,vRayDirection,extraDistance,vNormalResult)</help>
          <returnType>2</returnType>
          <argCount>6</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>screenConvertPrep</name>
          <externalName>screenConvertPrep</externalName>
          <kind>2</kind>
          <help>screenConvertPrep(vCameraPosition,vForward,vUp,fov,screenw,screenh)</help>
          <returnType>2</returnType>
          <argCount>6</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>screenConvertToVector</name>
          <externalName>screenConvertToVector</externalName>
          <kind>2</kind>
          <help>screenConvertToVector(vResult,x,y)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>screenConvertToScreen</name>
          <externalName>screenConvertToScreen</externalName>
          <kind>2</kind>
          <help>screenConvertToScreen(vResult,vPosition)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>readFiles</name>
          <externalName>readFiles</externalName>
          <kind>2</kind>
          <help>readFiles(startDirectory,extension,dsList)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>stringExtract</name>
          <externalName>stringExtract</externalName>
          <kind>11</kind>
          <help>stringExtract(string,tokenString,index)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>getNumber</name>
          <externalName>getNumber</externalName>
          <kind>2</kind>
          <help>getNumber(text,defualt)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>stringToReal</name>
          <externalName>stringToReal</externalName>
          <kind>2</kind>
          <help>stringToReal(stringNumber)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fileTextOpenRead</name>
          <externalName>fileTextOpenRead</externalName>
          <kind>2</kind>
          <help>fileTextOpenRead(fname)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fileTextOpenWrite</name>
          <externalName>fileTextOpenWrite</externalName>
          <kind>2</kind>
          <help>fileTextOpenWrite(fname)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fileTextWriteString</name>
          <externalName>fileTextWriteString</externalName>
          <kind>2</kind>
          <help>fileTextWriteString(file,string)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fileTextReadString</name>
          <externalName>fileTextReadString</externalName>
          <kind>2</kind>
          <help>fileTextReadString(file)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fileTextWriteReal</name>
          <externalName>fileTextWriteReal</externalName>
          <kind>2</kind>
          <help>fileTextWriteReal(file,real)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fileTextReadReal</name>
          <externalName>fileTextReadReal</externalName>
          <kind>2</kind>
          <help>fileTextReadReal(file)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fileTextWriteVector</name>
          <externalName>fileTextWriteVector</externalName>
          <kind>2</kind>
          <help>fileTextWriteVector(file,vector)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fileTextReadVector</name>
          <externalName>fileTextReadVector</externalName>
          <kind>2</kind>
          <help>fileTextReadVector(file,vector)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fileTextWriteQuat</name>
          <externalName>fileTextWriteQuat</externalName>
          <kind>2</kind>
          <help>fileTextWriteQuat(file,quaternion)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fileTextReadQuat</name>
          <externalName>fileTextReadQuat</externalName>
          <kind>2</kind>
          <help>fileTextReadQuat(file,quaternion)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fileBinWriteWord</name>
          <externalName>fileBinWriteWord</externalName>
          <kind>2</kind>
          <help>fileBinWriteWord(file,size,bigend,value)</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fileBinReadWord</name>
          <externalName>fileBinReadWord</externalName>
          <kind>2</kind>
          <help>fileBinReadWord(file,size,binend)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fileBinWriteInt</name>
          <externalName>fileBinWriteInt</externalName>
          <kind>2</kind>
          <help>fileBinWriteInt(file,value)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fileBinReadInt</name>
          <externalName>fileBinReadInt</externalName>
          <kind>2</kind>
          <help>fileBinReadInt(file)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fileBinWriteString</name>
          <externalName>fileBinWriteString</externalName>
          <kind>2</kind>
          <help>fileBinWriteString(file,string)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>fileBinReadString</name>
          <externalName>fileBinReadString</externalName>
          <kind>2</kind>
          <help>fileBinReadString(file)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>grid3dCreate</name>
          <externalName>grid3dCreate</externalName>
          <kind>2</kind>
          <help>grid3dCreate(sizex,sizey,sizez,defaultValue)</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>grid3dDestroy</name>
          <externalName>grid3dDestroy</externalName>
          <kind>2</kind>
          <help>grid3dDestroy(grid)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>grid3dSet</name>
          <externalName>grid3dSet</externalName>
          <kind>11</kind>
          <help>grid3dSet(grid,vCell,value)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>grid3dGet</name>
          <externalName>grid3dGet</externalName>
          <kind>2</kind>
          <help>grid3dGet(grid,vCell)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>grid3dGetxyz</name>
          <externalName>grid3dGetxyz</externalName>
          <kind>2</kind>
          <help>grid3dGetxyz(grid,x,y,z)</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>grid3dSetxyz</name>
          <externalName>grid3dSetxyz</externalName>
          <kind>11</kind>
          <help>grid3dSetxyz(grid,x,y,z,value)</help>
          <returnType>2</returnType>
          <argCount>5</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>grid3dSizex</name>
          <externalName>grid3dSizex</externalName>
          <kind>2</kind>
          <help>grid3dSizex(grid)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>grid3dSizey</name>
          <externalName>grid3dSizey</externalName>
          <kind>2</kind>
          <help>grid3dSizey(grid)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>grid3dSizez</name>
          <externalName>grid3dSizez</externalName>
          <kind>2</kind>
          <help>grid3dSizez(grid)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>grid3dResize</name>
          <externalName>grid3dResize</externalName>
          <kind>2</kind>
          <help>grid3dResize(grid,vSize)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>grid3dResizexyz</name>
          <externalName>grid3dResizexyz</externalName>
          <kind>2</kind>
          <help>grid3dResizexyz(grid,x,y,z)</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>grid3dCopy</name>
          <externalName>grid3dCopy</externalName>
          <kind>2</kind>
          <help>grid3dCopy(target,source)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>grid3dClear</name>
          <externalName>grid3dClear</externalName>
          <kind>2</kind>
          <help>grid3dClear(grid,value)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>grid3dCopyRegion</name>
          <externalName>grid3dCopyRegion</externalName>
          <kind>2</kind>
          <help>grid3dCopyRegion(id,source,vCellStart,vCellEnd,vPosition)</help>
          <returnType>2</returnType>
          <argCount>5</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>grid3dWrite</name>
          <externalName>grid3dWrite</externalName>
          <kind>2</kind>
          <help>grid3dWrite(file,grid)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>grid3dRead</name>
          <externalName>grid3dRead</externalName>
          <kind>2</kind>
          <help>grid3dRead(file,grid)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>grid3dInside</name>
          <externalName>grid3dInside</externalName>
          <kind>11</kind>
          <help>grid3dInside(grid,vCell)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>grid3dFloodFill</name>
          <externalName>grid3dFloodFill</externalName>
          <kind>2</kind>
          <help>grid3dFloodFill(grid,vStartCell,spreadx,spready,spreadz,conditionScript)</help>
          <returnType>2</returnType>
          <argCount>6</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>d3dSetProjectionQuat</name>
          <externalName>d3dSetProjectionQuat</externalName>
          <kind>2</kind>
          <help>d3dSetProjectionQuat(vPosition,qRotation,fov,aspect,znear,zfar)</help>
          <returnType>2</returnType>
          <argCount>6</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>d3dSetProjection</name>
          <externalName>d3dSetProjection</externalName>
          <kind>2</kind>
          <help>d3dSetProjection(vPosition,vForward,vUp,fov,aspect,znear,zfar)</help>
          <returnType>2</returnType>
          <argCount>7</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>d3dTransform</name>
          <externalName>d3dTransform</externalName>
          <kind>2</kind>
          <help>d3dTransform(vPosition,qRotation)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>d3dTransformAdd</name>
          <externalName>d3dTransformAdd</externalName>
          <kind>2</kind>
          <help>d3dTransformAdd(vPosition,qRotation)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>d3dTransformTranslate</name>
          <externalName>d3dTransformTranslate</externalName>
          <kind>2</kind>
          <help>d3dTransformTranslate(vPosition)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>d3dSetOrtho</name>
          <externalName>d3dSetOrtho</externalName>
          <kind>2</kind>
          <help>d3dSetOrtho(w,h)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>d3dLightDefineDirection</name>
          <externalName>d3dLightDefineDirection</externalName>
          <kind>2</kind>
          <help>d3dLightDefineDirection(vDirection,ind,color)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>d3dModelBlock</name>
          <externalName>d3dModelBlock</externalName>
          <kind>2</kind>
          <help>d3dModelBlock(model,vPosition,vSize,hrepeat,vrepeat)</help>
          <returnType>2</returnType>
          <argCount>5</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>d3dDrawBlock</name>
          <externalName>d3dDrawBlock</externalName>
          <kind>11</kind>
          <help>d3dDrawBlock(vPosition,radius)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>d3dDrawBlockLines</name>
          <externalName>d3dDrawBlockLines</externalName>
          <kind>2</kind>
          <help>d3dDrawBlockLines(vPositionStart,vPositionEnd)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>mergeBackgrounds</name>
          <externalName>mergeBackgrounds</externalName>
          <kind>2</kind>
          <help>mergeBackgrounds(listBackgrounds,backw,backh)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>ds_grid_inside</name>
          <externalName>ds_grid_inside</externalName>
          <kind>2</kind>
          <help>ds_grid_inside(grid,vCell)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>ds_list_remove</name>
          <externalName>ds_list_remove</externalName>
          <kind>2</kind>
          <help>ds_list_remove(list,value)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>d3dModelLoad</name>
          <externalName>d3dModelLoad</externalName>
          <kind>2</kind>
          <help>d3dModelLoad(fname)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>blockSystemCreate</name>
          <externalName>blockSystemCreate</externalName>
          <kind>2</kind>
          <help>blockSystemCreate(cellsx,cellsy,cellsz,cellSizex,cellSizey,cellSizez,blocksInModelx,blocksInModely,blocksInModelz,sheet)</help>
          <returnType>2</returnType>
          <argCount>10</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>blockSystemDestroy</name>
          <externalName>blockSystemDestroy</externalName>
          <kind>2</kind>
          <help>blockSystemDestroy(blockSystem)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>blockSystemClear</name>
          <externalName>blockSystemClear</externalName>
          <kind>2</kind>
          <help>blockSystemClear(blockSystem)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>blockSystemModelCreate</name>
          <externalName>blockSystemModelCreate</externalName>
          <kind>11</kind>
          <help>blockSystemModelCreate(blockSystem,vCell)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>blockSystemModelDestroy</name>
          <externalName>blockSystemModelDestroy</externalName>
          <kind>2</kind>
          <help>blockSystemModelDestroy(model)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>blockSystemModelUpdateDarkEdges</name>
          <externalName>blockSystemModelUpdateDarkEdges</externalName>
          <kind>2</kind>
          <help>blockSystemModelUpdateDarkEdges(model,darkColor)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>blockSystemBlockCreate</name>
          <externalName>blockSystemBlockCreate</externalName>
          <kind>11</kind>
          <help>blockSystemBlockCreate(blockSystem,model,vCell,defaultBackground)</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>blockSystemBlockDestroy</name>
          <externalName>blockSystemBlockDestroy</externalName>
          <kind>2</kind>
          <help>blockSystemBlockDestroy(block)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>blockSystemAddBlock</name>
          <externalName>blockSystemAddBlock</externalName>
          <kind>2</kind>
          <help>blockSystemAddBlock(blockSystem,vCell,override,background)</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>blockSystemAddBlockxyz</name>
          <externalName>blockSystemAddBlockxyz</externalName>
          <kind>2</kind>
          <help>blockSystemAddBlockxyz(blockSystem,x,y,z,override,background)</help>
          <returnType>2</returnType>
          <argCount>6</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>blockSystemRemoveBlock</name>
          <externalName>blockSystemRemoveBlock</externalName>
          <kind>2</kind>
          <help>blockSystemRemoveBlock(blockSystem,vCell)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>blockSystemRemoveBlockxyz</name>
          <externalName>blockSystemRemoveBlockxyz</externalName>
          <kind>2</kind>
          <help>blockSystemRemoveBlockxyz(blockSystem,x,y,z)</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>blockSystemGetBlock</name>
          <externalName>blockSystemGetBlock</externalName>
          <kind>2</kind>
          <help>blockSystemGetBlock(blockSystem,vCell)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>blockSystemSetBackground</name>
          <externalName>blockSystemSetBackground</externalName>
          <kind>2</kind>
          <help>blockSystemSetBackground(blockId,side,background)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>blockSystemGetBackground</name>
          <externalName>blockSystemGetBackground</externalName>
          <kind>2</kind>
          <help>blockSystemGetBackground(blockId,side)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>blockSystemGetVisible</name>
          <externalName>blockSystemGetVisible</externalName>
          <kind>2</kind>
          <help>blockSystemGetVisible(block,side)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>blockSystemUpdate</name>
          <externalName>blockSystemUpdate</externalName>
          <kind>2</kind>
          <help>blockSystemUpdate(blockSystem,vCellStart,vCellEnd)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>blockSystemUpdateEverything</name>
          <externalName>blockSystemUpdateEverything</externalName>
          <kind>2</kind>
          <help>blockSystemUpdateEverything(blockSystem)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>blockSystemDraw</name>
          <externalName>blockSystemDraw</externalName>
          <kind>2</kind>
          <help>blockSystemDraw(blockSystem)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>blockSystemInside</name>
          <externalName>blockSystemInside</externalName>
          <kind>2</kind>
          <help>blockSystemInside(blockSystem,vCell)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>blockSystemGetCells</name>
          <externalName>blockSystemGetCells</externalName>
          <kind>2</kind>
          <help>blockSystemGetCells(blockSystem)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>blockSystemGetSize</name>
          <externalName>blockSystemGetSize</externalName>
          <kind>2</kind>
          <help>blockSystemGetSize(blockSystem)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>blockSystemGetCellSize</name>
          <externalName>blockSystemGetCellSize</externalName>
          <kind>2</kind>
          <help>blockSystemGetCellSize(blockSystem)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>blockSystemGetGrid</name>
          <externalName>blockSystemGetGrid</externalName>
          <kind>2</kind>
          <help>blockSystemGetGrid(blockSystem)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>blockSystemResize</name>
          <externalName>blockSystemResize</externalName>
          <kind>2</kind>
          <help>blockSystemResize(blockSystem,cellsx,cellsy,cellsz)</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>blockSystemTranslate</name>
          <externalName>blockSystemTranslate</externalName>
          <kind>2</kind>
          <help>blockSystemTranslate(blockSystem,movex,movey,movez)</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>blockSystemTextWrite</name>
          <externalName>blockSystemTextWrite</externalName>
          <kind>2</kind>
          <help>blockSystemTextWrite(blockSystem,file,listBackgrounds)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>blockSystemTextRead</name>
          <externalName>blockSystemTextRead</externalName>
          <kind>2</kind>
          <help>blockSystemTextRead(blockSystem,file,listBackgrounds)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>debugInit</name>
          <externalName>debugInit</externalName>
          <kind>2</kind>
          <help>debugInit(object_index)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>debug</name>
          <externalName>debug</externalName>
          <kind>2</kind>
          <help>debug("text",variable)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>debugVector</name>
          <externalName>debugVector</externalName>
          <kind>2</kind>
          <help>debugVector("text",vector)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>debugDraw</name>
          <externalName>debugDraw</externalName>
          <kind>2</kind>
          <help>debugDraw(x,y)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>sheetCreate</name>
          <externalName>sheetCreate</externalName>
          <kind>2</kind>
          <help>sheetCreate(maxw,maxh,imagew,imageh)</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>sheetDestroy</name>
          <externalName>sheetDestroy</externalName>
          <kind>2</kind>
          <help>sheetDestroy(sheet)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>sheetMergeBackgrounds</name>
          <externalName>sheetMergeBackgrounds</externalName>
          <kind>2</kind>
          <help>sheetMergeBackgrounds(sheet,listBackgrounds,inset)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>sheetGetTexture</name>
          <externalName>sheetGetTexture</externalName>
          <kind>2</kind>
          <help>sheetGetTexture(sheet)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>sheetAu</name>
          <externalName>sheetAu</externalName>
          <kind>2</kind>
          <help>sheetAu(sheet,image)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>sheetAv</name>
          <externalName>sheetAv</externalName>
          <kind>2</kind>
          <help>sheetAv(sheet,image)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>sheetBu</name>
          <externalName>sheetBu</externalName>
          <kind>2</kind>
          <help>sheetBu(sheet,image)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>sheetBv</name>
          <externalName>sheetBv</externalName>
          <kind>2</kind>
          <help>sheetBv(sheet,image)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>highscoreCreate</name>
          <externalName>highscoreCreate</externalName>
          <kind>11</kind>
          <help>highscoreCreate(maxEntries)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>highscoreDestroy</name>
          <externalName>highscoreDestroy</externalName>
          <kind>2</kind>
          <help>highscoreDestroy(highscore)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>highscoreAdd</name>
          <externalName>highscoreAdd</externalName>
          <kind>2</kind>
          <help>highscoreAdd(highscoreTable,name,score)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>highscoreWrite</name>
          <externalName>highscoreWrite</externalName>
          <kind>11</kind>
          <help>highscoreWrite(highscoreTable,file)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>highscoreRead</name>
          <externalName>highscoreRead</externalName>
          <kind>2</kind>
          <help>highscoreRead(highscore,file)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
      </functions>
      <constants>
        <constant>
          <name>X</name>
          <value>0</value>
          <hidden>0</hidden>
        </constant>
        <constant>
          <name>Y</name>
          <value>1</value>
          <hidden>0</hidden>
        </constant>
        <constant>
          <name>Z</name>
          <value>2</value>
          <hidden>0</hidden>
        </constant>
        <constant>
          <name>NX</name>
          <value>3</value>
          <hidden>0</hidden>
        </constant>
        <constant>
          <name>NY</name>
          <value>4</value>
          <hidden>0</hidden>
        </constant>
        <constant>
          <name>NZ</name>
          <value>5</value>
          <hidden>0</hidden>
        </constant>
        <constant>
          <name>SIDEXP</name>
          <value>0</value>
          <hidden>0</hidden>
        </constant>
        <constant>
          <name>SIDEXN</name>
          <value>1</value>
          <hidden>0</hidden>
        </constant>
        <constant>
          <name>SIDEYP</name>
          <value>2</value>
          <hidden>0</hidden>
        </constant>
        <constant>
          <name>SIDEYN</name>
          <value>3</value>
          <hidden>0</hidden>
        </constant>
        <constant>
          <name>SIDEZP</name>
          <value>4</value>
          <hidden>0</hidden>
        </constant>
        <constant>
          <name>SIDEZN</name>
          <value>5</value>
          <hidden>0</hidden>
        </constant>
      </constants>
    </file>
  </files>
</extension>
